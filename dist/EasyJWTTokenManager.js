"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EasyJWTTokenManager = void 0;
const TokenNotFoundError_1 = __importDefault(require("./errors/TokenNotFoundError"));
class EasyJWTTokenManager {
    _getStorage() {
        return localStorage;
    }
    getAccessToken() {
        const token = this._getStorage().getItem(EasyJWTTokenManager.ACCESS_TOKEN_KEY);
        if (!token) {
            throw new TokenNotFoundError_1.default();
        }
        return token;
    }
    setAccessToken(token) {
        this._getStorage().setItem(EasyJWTTokenManager.ACCESS_TOKEN_KEY, token);
    }
    removeAccessToken() {
        this._getStorage().removeItem(EasyJWTTokenManager.ACCESS_TOKEN_KEY);
    }
    getRefreshToken() {
        const token = this._getStorage().getItem(EasyJWTTokenManager.REFRESH_TOKEN_KEY);
        if (!token) {
            throw new TokenNotFoundError_1.default();
        }
        return token;
    }
    setRefreshToken(token) {
        this._getStorage().setItem(EasyJWTTokenManager.REFRESH_TOKEN_KEY, token);
    }
    removeRefreshToken() {
        this._getStorage().removeItem(EasyJWTTokenManager.REFRESH_TOKEN_KEY);
    }
}
exports.EasyJWTTokenManager = EasyJWTTokenManager;
EasyJWTTokenManager.ACCESS_TOKEN_KEY = 'access_token';
EasyJWTTokenManager.REFRESH_TOKEN_KEY = 'refresh_token';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWFzeUpXVFRva2VuTWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9FYXN5SldUVG9rZW5NYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLHFGQUE0RDtBQUU1RCxNQUFhLG1CQUFtQjtJQUlwQixXQUFXO1FBQ25CLE9BQU8sWUFBWSxDQUFBO0lBQ3JCLENBQUM7SUFFRCxjQUFjO1FBQ1osTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLE9BQU8sQ0FDdEMsbUJBQW1CLENBQUMsZ0JBQWdCLENBQ3JDLENBQUE7UUFDRCxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1YsTUFBTSxJQUFJLDRCQUFrQixFQUFFLENBQUE7U0FDL0I7UUFFRCxPQUFPLEtBQUssQ0FBQTtJQUNkLENBQUM7SUFFRCxjQUFjLENBQUMsS0FBYTtRQUMxQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxDQUFBO0lBQ3pFLENBQUM7SUFFRCxpQkFBaUI7UUFDZixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDLENBQUE7SUFDckUsQ0FBQztJQUVELGVBQWU7UUFDYixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUN0QyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FDdEMsQ0FBQTtRQUNELElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixNQUFNLElBQUksNEJBQWtCLEVBQUUsQ0FBQTtTQUMvQjtRQUVELE9BQU8sS0FBSyxDQUFBO0lBQ2QsQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUFhO1FBQzNCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDMUUsQ0FBQztJQUVELGtCQUFrQjtRQUNoQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLENBQUE7SUFDdEUsQ0FBQzs7QUE1Q0gsa0RBNkNDO0FBNUNrQixvQ0FBZ0IsR0FBRyxjQUFjLENBQUE7QUFDakMscUNBQWlCLEdBQUcsZUFBZSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUVhc3lKV1RUb2tlbk1hbmFnZXIgfSBmcm9tICcuL2ludGVyZmFjZXMvSUVhc3lKV1RUb2tlbk1hbmFnZXInXG5pbXBvcnQgVG9rZW5Ob3RGb3VuZEVycm9yIGZyb20gJy4vZXJyb3JzL1Rva2VuTm90Rm91bmRFcnJvcidcblxuZXhwb3J0IGNsYXNzIEVhc3lKV1RUb2tlbk1hbmFnZXIgaW1wbGVtZW50cyBJRWFzeUpXVFRva2VuTWFuYWdlciB7XG4gIHByb3RlY3RlZCBzdGF0aWMgQUNDRVNTX1RPS0VOX0tFWSA9ICdhY2Nlc3NfdG9rZW4nXG4gIHByb3RlY3RlZCBzdGF0aWMgUkVGUkVTSF9UT0tFTl9LRVkgPSAncmVmcmVzaF90b2tlbidcblxuICBwcm90ZWN0ZWQgX2dldFN0b3JhZ2UoKSB7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZVxuICB9XG5cbiAgZ2V0QWNjZXNzVG9rZW4oKTogc3RyaW5nIHtcbiAgICBjb25zdCB0b2tlbiA9IHRoaXMuX2dldFN0b3JhZ2UoKS5nZXRJdGVtKFxuICAgICAgRWFzeUpXVFRva2VuTWFuYWdlci5BQ0NFU1NfVE9LRU5fS0VZXG4gICAgKVxuICAgIGlmICghdG9rZW4pIHtcbiAgICAgIHRocm93IG5ldyBUb2tlbk5vdEZvdW5kRXJyb3IoKVxuICAgIH1cblxuICAgIHJldHVybiB0b2tlblxuICB9XG5cbiAgc2V0QWNjZXNzVG9rZW4odG9rZW46IHN0cmluZykge1xuICAgIHRoaXMuX2dldFN0b3JhZ2UoKS5zZXRJdGVtKEVhc3lKV1RUb2tlbk1hbmFnZXIuQUNDRVNTX1RPS0VOX0tFWSwgdG9rZW4pXG4gIH1cblxuICByZW1vdmVBY2Nlc3NUb2tlbigpIHtcbiAgICB0aGlzLl9nZXRTdG9yYWdlKCkucmVtb3ZlSXRlbShFYXN5SldUVG9rZW5NYW5hZ2VyLkFDQ0VTU19UT0tFTl9LRVkpXG4gIH1cblxuICBnZXRSZWZyZXNoVG9rZW4oKTogc3RyaW5nIHtcbiAgICBjb25zdCB0b2tlbiA9IHRoaXMuX2dldFN0b3JhZ2UoKS5nZXRJdGVtKFxuICAgICAgRWFzeUpXVFRva2VuTWFuYWdlci5SRUZSRVNIX1RPS0VOX0tFWVxuICAgIClcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICB0aHJvdyBuZXcgVG9rZW5Ob3RGb3VuZEVycm9yKClcbiAgICB9XG5cbiAgICByZXR1cm4gdG9rZW5cbiAgfVxuXG4gIHNldFJlZnJlc2hUb2tlbih0b2tlbjogc3RyaW5nKSB7XG4gICAgdGhpcy5fZ2V0U3RvcmFnZSgpLnNldEl0ZW0oRWFzeUpXVFRva2VuTWFuYWdlci5SRUZSRVNIX1RPS0VOX0tFWSwgdG9rZW4pXG4gIH1cblxuICByZW1vdmVSZWZyZXNoVG9rZW4oKSB7XG4gICAgdGhpcy5fZ2V0U3RvcmFnZSgpLnJlbW92ZUl0ZW0oRWFzeUpXVFRva2VuTWFuYWdlci5SRUZSRVNIX1RPS0VOX0tFWSlcbiAgfVxufVxuIl19